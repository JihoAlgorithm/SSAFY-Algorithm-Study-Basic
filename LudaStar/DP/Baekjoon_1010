package DP;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Baekjoon_1010_다리놓기 {


	public static void main(String[] args) throws Exception {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int T = Integer.parseInt(br.readLine());
		for(int tc = 0; tc < T; tc++) {
			StringTokenizer st = new StringTokenizer(br.readLine(), " ");
			int N = Integer.parseInt(st.nextToken()); // 서쪽
			int M = Integer.parseInt(st.nextToken()); // 동쪽
			
			// 다리가 겹치지 않게 놓을 수 있는 경우들을 고르는 것
			
			//1. M개 중 N개를 고름 (M이 무조건 N보다 크다는 조건이 있으므로) MCN
			//2. DP 사용
			
			int[][] dp = new int[N+1][M+1];
			for(int i = 1; i < M+1; i++) {
				dp[1][i] = i;
			}
			
			for(int i = 1; i < N+1; i++) {
				for(int j = 1; j < M+1; j++) {
					if(i == j) dp[i][j] = 1;
				}
			}
			
			for(int i = 2; i < N+1; i++) {
				for(int j = i+1; j < M+1; j++) {
					dp[i][j] = dp[i-1][j-1] + dp[i][j-1];
				}
			}

			System.out.println(dp[N][M]);
			
		} // tc for
	}

}
