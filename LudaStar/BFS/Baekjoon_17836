package DFS_BFS;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.LinkedList;
import java.util.Queue;
import java.util.StringTokenizer;

class Loc {
	int x, y, time, sword;

	public Loc(int x, int y, int time, int sword) {
		this.x = x;
		this.y = y;
		this.time = time;
		this.sword = sword;
	}
}

public class Baekjoon_17836_공주님을구해라 {

	static int N, M, T;
	static int[][] map;
	static boolean[][][] visited;
	static boolean get_sword;
	static int[] dx = {-1, 0, +1, 0};
	static int[] dy = {0, -1, 0, +1};
	
	public static void main(String[] args) throws Exception {
		
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine(), " ");
		N = Integer.parseInt(st.nextToken());
		M = Integer.parseInt(st.nextToken());
		T = Integer.parseInt(st.nextToken());
		
		map = new int[N][M];
		visited = new boolean[N][M][2];
		
		for(int i = 0; i < N; i++) {
			st = new StringTokenizer(br.readLine(), " ");
			for(int j = 0; j < M; j++) {
				map[i][j] = Integer.parseInt(st.nextToken());
			}
		}
		bfs();
	}

	private static void bfs() {
		Queue<Loc> q = new LinkedList<>();
		q.offer(new Loc(0,0,0,0));
		visited[0][0][0] = true;
		
		while(!q.isEmpty()) {
			Loc loc = q.poll();
			int x = loc.x;
			int y = loc.y;
			int time = loc.time;
			int sword = loc.sword;
			
			// 칼 득텤
			if(map[x][y] == 2) sword = 1;
			
			// 시간 초과
			if(time > T) break;
			
			for(int d = 0; d < 4; d++) {
				int nx = x + dx[d];
				int ny = y + dy[d];
				
				// 맵 밖으로 나가지 않는 범위
				if(nx < 0 || ny < 0 || nx >= N || ny >= M) continue;
				
				// 공주 만나면 return
				if(nx == N-1 && ny == M-1) {
					System.out.println(time+1);
					return;
				}
				
				// 이미 갔던 곳이면 skip
				if(visited[nx][ny][sword]) continue;

				// 칼을 가지고 있는 상태
				if(sword == 1) {
					q.offer(new Loc(nx,ny,time+1,sword));
					visited[nx][ny][sword] = true;
					continue;
					
				}
				// 칼이 없는 상태
				else {
					if(map[nx][ny] == 0 || map[nx][ny] == 2){
						q.offer(new Loc(nx,ny,time+1,sword));
						visited[nx][ny][sword] = true;
						
					}
				}

			}
		} // while
		
		// 여기 나오면 공주님 못 만난 것
		System.out.println("Fail");
		
	}

}
